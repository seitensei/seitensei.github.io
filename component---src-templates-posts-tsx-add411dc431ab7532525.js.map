{"version":3,"sources":["webpack://tnsicdr.github.io/./src/components/PostExcerpt/PostExcerpt.tsx","webpack://tnsicdr.github.io/./src/templates/Posts.tsx"],"names":["PostExcerpt","props","title","slug","body","date","Link","to","toLocaleString","data","pageContext","posts","nextPagePath","previousPagePath","allWpPost","nodes","length","Layout","map","post","index","content","String","Date","excerptContent","parse","excerpt","Array","isArray","children","splice"],"mappings":"oNASaA,EAAc,SAACC,GACxB,IAAQC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAE3B,OACI,gCACI,yBAAI,SAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAV,SAAiBD,OACrB,wBAAKG,EAAKG,mBACTJ,MC0Bb,EArCsB,SAAC,GAGhB,IAFLK,EAEI,EAFJA,KAEI,IADJC,YAEMC,GADF,EADWC,aACX,EADyBC,iBAEfJ,EAAKK,UAAUC,OAC7B,OAAKJ,EAAMK,QAKT,SAACC,EAAA,EAAD,UACCN,EAAMO,KAAI,SAACC,EAAMC,GAChB,IAKIC,EALEnB,EAAQoB,OAAOH,EAAKjB,OACpBG,EAAO,IAAIkB,KAAKJ,EAAKd,MACrBF,EAAI,SAAYmB,OAAOH,EAAKhB,MAE5BqB,GAAiBC,QAAMN,EAAKO,SAalC,OATIC,MAAMC,QAAQJ,IAChBH,EAAUG,EAAe,GACtBG,MAAMC,QAAQP,EAAQpB,MAAM4B,WAC7BR,EAAQpB,MAAM4B,SAASC,OAAO,EAAGT,EAAQpB,MAAM4B,SAASb,SAG1DK,EAAUG,GAIV,SAACxB,EAAD,CAAyBG,KAAMA,EAAMD,MAAOA,EAAOG,KAAMA,EAAMD,KAAMiB,GAAnDD,SAxBf","file":"component---src-templates-posts-tsx-add411dc431ab7532525.js","sourcesContent":["import { Link } from \"gatsby\";\n\ninterface IPostExcerptProps {\n    title: string;\n    slug: string;\n    date: Date;\n    body: string | JSX.Element | JSX.Element[];\n}\n\nexport const PostExcerpt = (props: IPostExcerptProps) => {\n    const { title, slug, body, date } = props;\n\n    return (\n        <article>\n            <h1><Link to={slug}>{title}</Link></h1>\n            <h2>{date.toLocaleString()}</h2>\n            {body}\n        </article>\n    );\n};","import { graphql } from \"gatsby\";\nimport parse from 'html-react-parser';\nimport { Layout } from \"../components/Layout/Layout\";\nimport { PostExcerpt } from \"../components/PostExcerpt/PostExcerpt\";\n\nconst PostsTemplate = ({\n  data,\n  pageContext: { nextPagePath, previousPagePath },\n}) => {\n  const posts = data.allWpPost.nodes;\n  if (!posts.length) {\n    return <p>There are no posts at this time.</p>;\n  }\n\n  return (\n    <Layout>\n    {posts.map((post, index) => {\n      const title = String(post.title);\n      const date = new Date(post.date);\n      const slug = `/post/${String(post.slug)}`;\n\n      const excerptContent = parse(post.excerpt);\n      let content;\n\n      // For the excerpt, only the text content matters\n      if (Array.isArray(excerptContent)) {\n        content = excerptContent[0];\n        if(Array.isArray(content.props.children)) {\n          content.props.children.splice(1, content.props.children.length);\n        } \n      } else {\n        content = excerptContent;\n      }\n\n      return (\n        <PostExcerpt key={index} slug={slug} title={title} date={date} body={content} />\n      );\n    })}\n    </Layout>\n  );\n};\n\nexport default PostsTemplate;\n\nexport const pageQuery = graphql`\n  query PostsQuery($offset: Int!, $postsPerPage: Int!) {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        excerpt\n        slug\n        date\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}