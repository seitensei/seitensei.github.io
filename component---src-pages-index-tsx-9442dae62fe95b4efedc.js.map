{"version":3,"sources":["webpack://tnsicdr.github.io/./src/components/Feature/Feature.tsx","webpack://tnsicdr.github.io/./src/pages/index.tsx"],"names":["FeatureContainer","linkColor","Feature","props","children","IndexContainer","content","post","data","allWpPost","nodes","slug","String","excerptContent","parse","excerpt","Array","isArray","splice","length","GatsbyLayout","Link","to","title","className"],"mappings":"8NAIMA,GAAmB,cAAH,oBAAG,CAAH,gGAMLC,KANK,2BAaTC,EAAU,SAACC,GACpB,IAAQC,EAAaD,EAAbC,SAER,OACI,QAACJ,EAAD,KACKI,I,UChBb,IAAMC,GAAiB,cAAH,oBAAG,CAAH,qIA+DpB,EAnDkB,SAAC,GAAa,IAKxBC,EAJEC,EADsB,EAAXC,KACCC,UAAUC,MAAM,GAC5BC,EAAO,SAASC,OAAOL,EAAKI,MAC5BE,GAAiBC,QAAMP,EAAKQ,SAclC,OATIC,MAAMC,QAAQJ,IACdP,EAAUO,EAAe,GACrBG,MAAMC,QAAQX,EAAQH,MAAMC,WAC5BE,EAAQH,MAAMC,SAASc,OAAO,EAAGZ,EAAQH,MAAMC,SAASe,SAG5Db,EAAUO,GAIV,QAACR,EAAD,MACI,QAACe,EAAA,EAAD,MACI,QAAClB,EAAD,MACI,kCACA,wBACI,mBACI,QAAC,EAAAmB,KAAD,CAAMC,GAAIX,GAAOJ,EAAKgB,QAEzBjB,IAEL,eAAKkB,UAAU,oBACX,QAAC,EAAAH,KAAD,CAAMG,UAAU,aAAaF,GAAG,UAAhC","file":"component---src-pages-index-tsx-9442dae62fe95b4efedc.js","sourcesContent":["import { PropsWithChildren } from \"react\";\nimport styled from '@emotion/styled';\nimport { linkColor } from \"../../shared/colors\";\n\nconst FeatureContainer = styled.div`\n    background-color: rgba(0, 0, 0, 0.05);\n    padding: 8px;\n    border-radius: 4px;\n\n    a, a:visited, a:hover {\n        color: ${linkColor};\n        text-decoration: none;\n    }\n`;\n\ninterface IFeatureProps {}\n\nexport const Feature = (props: PropsWithChildren<IFeatureProps>) => {\n    const { children } = props;\n\n    return (\n        <FeatureContainer>\n            {children}\n        </FeatureContainer>\n    );\n}","import { GatsbyLayout } from '../components/Layout/GatsbyLayout';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { Feature } from '../components/Feature/Feature';\nimport parse from 'html-react-parser';\nimport styled from '@emotion/styled';\n\nconst IndexContainer = styled.div`\n    .feature-actions {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end;\n\n        .more-posts {\n            font-size: 1.2rem;\n        }\n    }\n`;\n\nconst IndexPage = ({ data }) => {\n    const post = data.allWpPost.nodes[0];\n    const slug = `/post/${String(post.slug)}`;\n    const excerptContent = parse(post.excerpt);\n\n    let content;\n\n    // For the excerpt, only the text content matters\n    if (Array.isArray(excerptContent)) {\n        content = excerptContent[0];\n        if (Array.isArray(content.props.children)) {\n            content.props.children.splice(1, content.props.children.length);\n        }\n    } else {\n        content = excerptContent;\n    }\n\n    return (\n        <IndexContainer>\n            <GatsbyLayout>\n                <Feature>\n                    <h1>Latest Post</h1>\n                    <article>\n                        <h2>\n                            <Link to={slug}>{post.title}</Link>\n                        </h2>\n                        {content}\n                    </article>\n                    <div className=\"feature-actions\">\n                        <Link className=\"more-posts\" to=\"/posts\">\n                            More Posts\n                        </Link>\n                    </div>\n                </Feature>\n            </GatsbyLayout>\n        </IndexContainer>\n    );\n};\n\nexport const query = graphql`\n    query IndexQuery {\n        allWpPost(limit: 1) {\n            nodes {\n                excerpt\n                title\n                slug\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}