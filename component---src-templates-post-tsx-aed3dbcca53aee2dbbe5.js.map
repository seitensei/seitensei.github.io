{"version":3,"sources":["webpack://seitensei.github.io/./src/components/post/post.tsx","webpack://seitensei.github.io/./src/templates/post.tsx"],"names":["Title","props","link","children","inner","Link","to","color","underline","Post","title","datetime","content","excerpt","readMore","ReadMoreLink","Container","component","Typography","variant","Divider","markdownRemark","data","frontmatter","postContent","html","dangerouslySetInnerHTML","__html","PostContent","date"],"mappings":"oNAqBMA,EAAQ,SAACC,GAAgD,IACnDC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SAEVC,EAAyBD,EAS7B,OARID,IACAE,EACI,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAMK,MAAM,UAAUC,UAAU,QACrCL,IAMT,gCAAGC,IAIEK,EAAO,SAACR,GAAiB,IAC1BS,EAA4CT,EAA5CS,MAAOC,EAAqCV,EAArCU,SAAUC,EAA2BX,EAA3BW,QAASV,EAAkBD,EAAlBC,KAAMW,EAAYZ,EAAZY,QAElCC,EA3BW,SAAC,GAAa,IAAXZ,EAAW,EAAXA,KACpB,OAAO,gBAAC,EAAAG,KAAD,CAAMC,GAAIJ,GAAV,iBA0BUa,CAAa,CAAEb,SAEhC,OACI,gBAACc,EAAA,EAAD,CAAWC,UAAU,WACjB,gBAACC,EAAA,EAAD,CAAYD,UAAU,KAAKE,QAAQ,MAC/B,gBAACnB,EAAD,CAAOE,KAAMA,GAAOQ,IAExB,gBAACQ,EAAA,EAAD,KAAaP,GACb,gBAACS,EAAA,EAAD,MACA,gBAACF,EAAA,EAAD,CAAYD,UAAU,KACjBL,EACAC,EAAUC,EAAW,S,2ECbtC,UA7BqB,SAAC,GAAa,IACvBO,EADuB,EAAXC,KACZD,eACAE,EAAsBF,EAAtBE,YAEFC,EARU,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACnB,OAAO,uBAAKC,wBAAyB,CAAEC,OAAQF,KAO3BG,CAAY,CAAEH,KAFJJ,EAATI,OAIrB,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIf,MAAOa,EAAYb,MACnBC,SAAUY,EAAYM,KACtBjB,QAASY","file":"component---src-templates-post-tsx-aed3dbcca53aee2dbbe5.js","sourcesContent":["import Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'gatsby-theme-material-ui';\nimport React from 'react';\n\ninterface IPost {\n    title: string;\n    datetime: string;\n    content: React.ReactNode;\n    link?: string;\n    excerpt?: boolean;\n}\n\nconst ReadMoreLink = ({ link }) => {\n    return <Link to={link}>{` `}Read More</Link>;\n};\n\ninterface ITitleProps {\n    link?: string;\n}\nconst Title = (props: React.PropsWithChildren<ITitleProps>) => {\n    const { link, children } = props;\n\n    let inner: React.ReactNode = children;\n    if (link) {\n        inner = (\n            <Link to={link} color=\"inherit\" underline=\"none\">\n                {children}\n            </Link>\n        );\n    }\n\n    return (\n        <>{inner}</>\n    );\n};\n\nexport const Post = (props: IPost) => {\n    const { title, datetime, content, link, excerpt } = props;\n\n    const readMore = ReadMoreLink({ link });\n\n    return (\n        <Container component=\"article\">\n            <Typography component=\"h4\" variant=\"h4\">\n                <Title link={link}>{title}</Title>\n            </Typography>\n            <Typography>{datetime}</Typography>\n            <Divider />\n            <Typography component=\"p\">\n                {content}\n                {excerpt ? readMore : null}\n            </Typography>\n        </Container>\n    );\n};\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport { Layout } from '../components/layout';\nimport { Post } from '../components/post';\n\nconst PostContent = ({ html }) => {\n    return <div dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nconst PostTemplate = ({ data }) => {\n    const { markdownRemark } = data;\n    const { frontmatter, html } = markdownRemark;\n\n    const postContent = PostContent({ html });\n\n    return (\n        <Layout>\n            <Post\n                title={frontmatter.title}\n                datetime={frontmatter.date}\n                content={postContent}\n            />\n        </Layout>\n    );\n};\n\nexport const postQuery = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                date(formatString: \"YYYY-MM-DD\")\n                title\n            }\n        }\n    }\n`;\n\nexport default PostTemplate;\n"],"sourceRoot":""}