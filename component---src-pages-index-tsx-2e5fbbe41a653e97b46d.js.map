{"version":3,"sources":["webpack://seitensei.github.io/./src/components/post/post.tsx","webpack://seitensei.github.io/./src/pages/index.tsx"],"names":["useStyles","makeStyles","theme","postContainer","marginBottom","spacing","Title","props","link","children","inner","Link","to","color","underline","Post","title","datetime","content","excerpt","styles","readMore","ReadMoreLink","Container","component","className","Typography","variant","Divider","allMarkdownRemark","data","edges","map","node","key","id","frontmatter","date","fields","slug"],"mappings":"6NAQMA,GAAYC,QAAW,SAAAC,GAAK,MAAK,CACnCC,cAAe,CACXC,aAAcF,EAAMG,QAAQ,QAmB9BC,EAAQ,SAACC,GAAgD,IACnDC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SAEVC,EAAyBD,EAS7B,OARID,IACAE,EACI,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAMK,MAAM,UAAUC,UAAU,QACrCL,IAMT,gCAAGC,IAIEK,EAAO,SAACR,GAAiB,IAC1BS,EAA4CT,EAA5CS,MAAOC,EAAqCV,EAArCU,SAAUC,EAA2BX,EAA3BW,QAASV,EAAkBD,EAAlBC,KAAMW,EAAYZ,EAAZY,QAElCC,EAASpB,IAETqB,EA7BW,SAAC,GAAa,IAAXb,EAAW,EAAXA,KACpB,OAAO,gBAAC,EAAAG,KAAD,CAAMC,GAAIJ,GAAV,iBA4BUc,CAAa,CAAEd,SAEhC,OACI,gBAACe,EAAA,EAAD,CAAWC,UAAU,UAAUC,UAAWL,EAAOjB,eAC7C,gBAACuB,EAAA,EAAD,CAAYF,UAAU,KAAKG,QAAQ,MAC/B,gBAACrB,EAAD,CAAOE,KAAMA,GAAOQ,IAExB,gBAACU,EAAA,EAAD,KAAaT,GACb,gBAACW,EAAA,EAAD,MACA,gBAACF,EAAA,EAAD,CAAYF,UAAU,KACjBN,EACAC,EAAUE,EAAW,S,2ECbtC,UA3CkB,SAAC,GAAa,IACpBQ,EADoB,EAAXC,KACTD,kBAER,OACI,gBAAC,IAAD,KACKA,EAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACrB,gBAAC,IAAD,CACIC,IAAKD,EAAKE,GACVnB,MAAOiB,EAAKG,YAAYpB,MACxBC,SAAUgB,EAAKG,YAAYC,KAC3BnB,QAASe,EAAKd,QACdX,KAAMyB,EAAKK,OAAOC,KAClBpB,SAAO","file":"component---src-pages-index-tsx-2e5fbbe41a653e97b46d.js","sourcesContent":["import Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'gatsby-theme-material-ui';\nimport React from 'react';\n\n\nconst useStyles = makeStyles(theme => ({\n    postContainer: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\ninterface IPost {\n    title: string;\n    datetime: string;\n    content: React.ReactNode;\n    link?: string;\n    excerpt?: boolean;\n}\n\nconst ReadMoreLink = ({ link }) => {\n    return <Link to={link}>{` `}Read More</Link>;\n};\n\ninterface ITitleProps {\n    link?: string;\n}\nconst Title = (props: React.PropsWithChildren<ITitleProps>) => {\n    const { link, children } = props;\n\n    let inner: React.ReactNode = children;\n    if (link) {\n        inner = (\n            <Link to={link} color=\"inherit\" underline=\"none\">\n                {children}\n            </Link>\n        );\n    }\n\n    return (\n        <>{inner}</>\n    );\n};\n\nexport const Post = (props: IPost) => {\n    const { title, datetime, content, link, excerpt } = props;\n\n    const styles = useStyles();\n\n    const readMore = ReadMoreLink({ link });\n\n    return (\n        <Container component=\"article\" className={styles.postContainer}>\n            <Typography component=\"h4\" variant=\"h4\">\n                <Title link={link}>{title}</Title>\n            </Typography>\n            <Typography>{datetime}</Typography>\n            <Divider />\n            <Typography component=\"p\">\n                {content}\n                {excerpt ? readMore : null}\n            </Typography>\n        </Container>\n    );\n};\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport { Layout } from '../components/layout';\nimport { Post } from '../components/post';\n\nconst IndexPage = ({ data }) => {\n    const { allMarkdownRemark } = data;\n\n    return (\n        <Layout>\n            {allMarkdownRemark.edges.map(({ node }) => (\n                    <Post\n                        key={node.id}\n                        title={node.frontmatter.title}\n                        datetime={node.frontmatter.date}\n                        content={node.excerpt}\n                        link={node.fields.slug}\n                        excerpt\n                    />\n            ))}\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: 5\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"DD MMMM, YYYY\")\n                    }\n                    fields {\n                        slug\n                    }\n                    excerpt(pruneLength: 500)\n                }\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}