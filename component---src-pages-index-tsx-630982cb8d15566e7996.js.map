{"version":3,"sources":["webpack://tnsicdr.github.io/./node_modules/@emotion/styled/node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js","webpack://tnsicdr.github.io/./node_modules/@emotion/styled/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://tnsicdr.github.io/./node_modules/@emotion/styled/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","webpack://tnsicdr.github.io/./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://tnsicdr.github.io/./src/components/Feature/Feature.tsx","webpack://tnsicdr.github.io/./src/pages/index.tsx"],"names":["reactPropsRegex","prop","test","charCodeAt","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","undefined","push","insertStyles","cache","serialized","isStringTag","key","name","styles","inserted","current","insert","sheet","next","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","value","processStyleName","styleName","replace","toLowerCase","processStyleValue","match","p1","p2","cursor","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","obj","string","Array","isArray","i","length","_key","interpolated","_i","createStringFromObject","previousCursor","result","cached","labelPattern","serializeStyles","args","stringMode","strings","raw","lastIndex","identifierName","exec","testOmitPropsOnStringTag","testOmitPropsOnComponent","getDefaultShouldForwardProp","tag","composeShouldForwardProps","options","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","createStyled","targetClassName","__emotion_real","baseTag","__emotion_base","label","target","defaultShouldForwardProp","shouldUseAs","arguments","slice","apply","len","Styled","w","props","ref","finalTag","as","classInterpolations","theme","useContext","T","concat","finalShouldForwardProp","newProps","createElement","displayName","defaultProps","Object","defineProperty","withComponent","nextTag","nextOptions","FeatureContainer","Feature","children","content","post","data","allWpPost","nodes","slug","String","excerptContent","parse","excerpt","splice","GatsbyLayout","Link","to","title"],"mappings":"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","file":"component---src-pages-index-tsx-630982cb8d15566e7996.js","sourcesContent":["import memoize from '@emotion/memoize';\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\nexport default isPropValid;","var isBrowser = \"object\" !== 'undefined';\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\n\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\n\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useContext, createElement } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\n\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var finalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      var rules = insertStyles(cache, serialized, typeof finalTag === 'string');\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      var ele = /*#__PURE__*/createElement(finalTag, newProps);\n      return ele;\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;","import { PropsWithChildren } from \"react\";\nimport styled from '@emotion/styled';\n\nconst FeatureContainer = styled.div`\n    background-color: rgba(0, 0, 0, 0.05);\n    padding: 8px;\n    border-radius: 4px;\n`;\n\ninterface IFeatureProps {}\n\nexport const Feature = (props: PropsWithChildren<IFeatureProps>) => {\n    const { children } = props;\n\n    return (\n        <FeatureContainer>\n            {children}\n        </FeatureContainer>\n    );\n}","import { GatsbyLayout } from '../components/Layout/GatsbyLayout';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { Feature } from '../components/Feature/Feature';\nimport parse from 'html-react-parser';\n\nconst IndexPage = ({ data }) => {\n    const post = data.allWpPost.nodes[0];\n    const slug = `/post/${String(post.slug)}`;\n    const excerptContent = parse(post.excerpt);\n\n    let content;\n\n    // For the excerpt, only the text content matters\n    if (Array.isArray(excerptContent)) {\n        content = excerptContent[0];\n        if (Array.isArray(content.props.children)) {\n            content.props.children.splice(1, content.props.children.length);\n        }\n    } else {\n        content = excerptContent;\n    }\n\n    return (\n        <GatsbyLayout>\n            <Feature>\n                <h1>Latest Post</h1>\n                <article>\n                    <h2><Link to={slug}>{post.title}</Link></h2>\n                    {content}\n                </article>\n            </Feature>\n        </GatsbyLayout>\n    );\n};\n\nexport const query = graphql`\n    query IndexQuery {\n        allWpPost(limit: 1) {\n            nodes {\n                excerpt\n                title\n                slug\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}