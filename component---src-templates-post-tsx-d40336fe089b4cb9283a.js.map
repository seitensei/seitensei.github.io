{"version":3,"sources":["webpack://seitensei.github.io/./node_modules/@material-ui/core/esm/Divider/Divider.js","webpack://seitensei.github.io/./src/components/post/post.tsx","webpack://seitensei.github.io/./src/templates/post.tsx"],"names":["Divider","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","middle","spacing","marginRight","alignSelf","name","Title","link","children","inner","Link","to","color","Typography","Post","title","datetime","content","excerpt","readMore","ReadMoreLink","Container","markdownRemark","data","frontmatter","postContent","html","dangerouslySetInnerHTML","__html","PostContent","date"],"mappings":"yOAuDIA,EAAuB,cAAiB,SAAiBC,EAAOC,GAClE,IAAIC,EAAkBF,EAAMG,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAmBN,EAAMO,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDG,EAAkBT,EAAMU,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAeX,EAAMY,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAqBb,EAAMc,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAAcf,EAAMgB,KACpBA,OAAuB,IAAhBD,EAAuC,OAAdP,EAAqB,iBAAcS,EAAYF,EAC/EG,EAAiBlB,EAAMmB,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,GAAQ,OAAyBpB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAE1I,OAAoB,gBAAoBQ,GAAW,OAAS,CAC1DH,WAAW,OAAKD,EAAQiB,KAAMhB,EAAuB,cAAZc,GAA2Bf,EAAQe,GAAUhB,GAAYC,EAAQD,SAAUO,GAAYN,EAAQM,SAAUE,GAASR,EAAQQ,MAAuB,aAAhBE,GAA8BV,EAAQkB,UAChNN,KAAMA,EACNf,IAAKA,GACJmB,OAGL,GAAe,EAAAG,EAAA,IA3EK,SAAgBC,GAClC,MAAO,CAELH,KAAM,CACJI,OAAQ,EACRC,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZC,gBAAiBL,EAAMM,QAAQC,SAIjC5B,SAAU,CACR6B,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,QAITC,MAAO,CACLC,WAAY,IAIdzB,MAAO,CACLiB,iBAAiB,QAAKL,EAAMM,QAAQC,QAAS,MAI/CO,OAAQ,CACND,WAAYb,EAAMe,QAAQ,GAC1BC,YAAahB,EAAMe,QAAQ,IAI7BjB,SAAU,CACRG,OAAQ,OACRU,MAAO,GAITzB,SAAU,CACR+B,UAAW,UACXhB,OAAQ,WA8BoB,CAChCiB,KAAM,cADR,CAEG3C,G,mBC5DG4C,EAAQ,SAAC3C,GAAgD,IACnD4C,EAAmB5C,EAAnB4C,KAAMC,EAAa7C,EAAb6C,SAEVC,EAAyBD,EAI7B,OAHID,IACAE,EAAQ,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAMK,MAAM,WAAYJ,IAG1C,gBAACK,EAAA,EAAD,CAAY3C,UAAU,KAAKY,QAAQ,MAC9B2B,IAKAK,EAAO,SAACnD,GAAiB,IAC1BoD,EAA4CpD,EAA5CoD,MAAOC,EAAqCrD,EAArCqD,SAAUC,EAA2BtD,EAA3BsD,QAASV,EAAkB5C,EAAlB4C,KAAMW,EAAYvD,EAAZuD,QAElCC,EA1BW,SAAC,GAAW,IAAVZ,EAAU,EAAVA,KACnB,OACI,gBAAC,EAAAG,KAAD,CAAMC,GAAIJ,GAAV,iBAwBaa,CAAa,CAACb,SAE/B,OACI,gBAACc,EAAA,EAAD,CAAWnD,UAAU,WACjB,gBAAC2C,EAAA,EAAD,CAAY3C,UAAU,KAAKY,QAAQ,MAC/B,gBAACwB,EAAD,KACKS,IAGT,gBAACF,EAAA,EAAD,KACKG,GAEL,gBAAC,EAAD,MACA,gBAACH,EAAA,EAAD,CAAY3C,UAAU,KACjB+C,EAASC,EAAUC,EAAW,S,2ECd/C,UA7BqB,SAAC,GAAa,IACvBG,EADuB,EAAXC,KACZD,eACAE,EAAsBF,EAAtBE,YAEFC,EAVU,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAClB,OACI,uBAAKC,wBAAyB,CAAEC,OAAQF,KAQxBG,CAAY,CAACH,KAFHJ,EAATI,OAIrB,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIX,MAAOS,EAAYT,MACnBC,SAAUQ,EAAYM,KACtBb,QAASQ","file":"component---src-templates-post-tsx-d40336fe089b4cb9283a.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'gatsby-theme-material-ui';\r\nimport * as React from 'react';\r\n\r\ninterface IPost {\r\n    title: string;\r\n    datetime: string;\r\n    content: React.ReactNode;\r\n    link?: string;\r\n    excerpt?: boolean;\r\n}\r\n\r\nconst ReadMoreLink = ({link}) => {\r\n    return (\r\n        <Link to={link}>{` `}Read More</Link>\r\n    );\r\n}\r\n\r\ninterface ITitleProps {\r\n    link?: string;\r\n}\r\nconst Title = (props: React.PropsWithChildren<ITitleProps>) => {\r\n    const { link, children } = props;\r\n\r\n    let inner: React.ReactNode = children;\r\n    if (link)\r\n        inner = <Link to={link} color=\"inherit\">{ children }</Link>\r\n\r\n    return (\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n            {inner}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport const Post = (props: IPost) => {\r\n    const { title, datetime, content, link, excerpt } = props;\r\n\r\n    const readMore = ReadMoreLink({link});\r\n\r\n    return (\r\n        <Container component=\"article\">\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n                <Title>\r\n                    {title}\r\n                </Title>\r\n            </Typography>\r\n            <Typography>\r\n                {datetime}\r\n            </Typography>\r\n            <Divider />\r\n            <Typography component=\"p\">\r\n                {content}{excerpt ? readMore : null}\r\n            </Typography>\r\n        </Container>\r\n    );\r\n};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Layout } from '../components/layout';\nimport { Post } from '../components/post';\n\nconst PostContent = ({html}) => {\n    return (\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n    );\n}\n\nconst PostTemplate = ({ data }) => {\n    const { markdownRemark } = data;\n    const { frontmatter, html } = markdownRemark;\n\n    const postContent = PostContent({html});\n\n    return (\n        <Layout>\n            <Post\n                title={frontmatter.title}\n                datetime={frontmatter.date}\n                content={postContent}\n            />\n        </Layout>\n    );\n};\n\nexport const postQuery = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                date(formatString: \"YYYY-MM-DD\")\n                title\n            }\n        }\n    }\n`;\n\nexport default PostTemplate;\n"],"sourceRoot":""}