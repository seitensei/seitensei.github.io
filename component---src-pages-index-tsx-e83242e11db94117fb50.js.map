{"version":3,"sources":["webpack://tnsicdr.github.io/./src/components/Feature/Feature.tsx","webpack://tnsicdr.github.io/./src/pages/index.tsx"],"names":["FeatureContainer","Feature","props","children","content","post","data","allWpPost","nodes","slug","String","excerptContent","parse","excerpt","Array","isArray","splice","length","GatsbyLayout","Link","to","title"],"mappings":"oNAGA,IAAMA,GAAgB,gIAQTC,EAAU,SAACC,GACpB,IAAQC,EAAaD,EAAbC,SAER,OACI,QAACH,EAAD,KACKG,I,UC+Bb,EA1CkB,SAAC,GAAc,IAKzBC,EAJEC,EADsB,EAAXC,KACCC,UAAUC,MAAM,GAC5BC,EAAI,SAAYC,OAAOL,EAAKI,MAC5BE,GAAiBC,QAAMP,EAAKQ,SAclC,OATIC,MAAMC,QAAQJ,IACdP,EAAUO,EAAe,GACrBG,MAAMC,QAAQX,EAAQF,MAAMC,WAC5BC,EAAQF,MAAMC,SAASa,OAAO,EAAGZ,EAAQF,MAAMC,SAASc,SAG5Db,EAAUO,GAIV,QAACO,EAAA,EAAD,MACI,QAACjB,EAAD,MACI,kCACA,wBACI,mBAAI,QAAC,EAAAkB,KAAD,CAAMC,GAAIX,GAAOJ,EAAKgB,QACzBjB","file":"component---src-pages-index-tsx-e83242e11db94117fb50.js","sourcesContent":["import { PropsWithChildren } from \"react\";\nimport styled from '@emotion/styled';\n\nconst FeatureContainer = styled.div`\n    background-color: rgba(0, 0, 0, 0.05);\n    padding: 8px;\n    border-radius: 4px;\n`;\n\ninterface IFeatureProps {}\n\nexport const Feature = (props: PropsWithChildren<IFeatureProps>) => {\n    const { children } = props;\n\n    return (\n        <FeatureContainer>\n            {children}\n        </FeatureContainer>\n    );\n}","import { GatsbyLayout } from '../components/Layout/GatsbyLayout';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { Feature } from '../components/Feature/Feature';\nimport parse from 'html-react-parser';\n\nconst IndexPage = ({ data }) => {\n    const post = data.allWpPost.nodes[0];\n    const slug = `/post/${String(post.slug)}`;\n    const excerptContent = parse(post.excerpt);\n\n    let content;\n\n    // For the excerpt, only the text content matters\n    if (Array.isArray(excerptContent)) {\n        content = excerptContent[0];\n        if (Array.isArray(content.props.children)) {\n            content.props.children.splice(1, content.props.children.length);\n        }\n    } else {\n        content = excerptContent;\n    }\n\n    return (\n        <GatsbyLayout>\n            <Feature>\n                <h1>Latest Post</h1>\n                <article>\n                    <h2><Link to={slug}>{post.title}</Link></h2>\n                    {content}\n                </article>\n            </Feature>\n        </GatsbyLayout>\n    );\n};\n\nexport const query = graphql`\n    query IndexQuery {\n        allWpPost(limit: 1) {\n            nodes {\n                excerpt\n                title\n                slug\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}